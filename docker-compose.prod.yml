version: '3.8'

services:
  # Load Balancer
  nginx:
    image: nginx:alpine
    container_name: healthai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - healthai-app-1
      - healthai-app-2
      - healthai-app-3
    restart: always
    networks:
      - healthai-network

  # Application Instances
  healthai-app-1:
    build: .
    container_name: healthai-app-1
    environment:
      - APP_INSTANCE=1
      - PORT=8000
    volumes:
      - ./data:/app/data
      - ./backups:/app/backups
    restart: always
    networks:
      - healthai-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/healthz').raise_for_status()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  healthai-app-2:
    build: .
    container_name: healthai-app-2
    environment:
      - APP_INSTANCE=2
      - PORT=8000
    volumes:
      - ./data:/app/data
      - ./backups:/app/backups
    restart: always
    networks:
      - healthai-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/healthz').raise_for_status()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  healthai-app-3:
    build: .
    container_name: healthai-app-3
    environment:
      - APP_INSTANCE=3
      - PORT=8000
    volumes:
      - ./data:/app/data
      - ./backups:/app/backups
    restart: always
    networks:
      - healthai-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/healthz').raise_for_status()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Monitoring
  prometheus:
    image: prom/prometheus
    container_name: healthai-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: always
    networks:
      - healthai-network

networks:
  healthai-network:
    driver: bridge

volumes:
  nginx_logs:
  prometheus_data: